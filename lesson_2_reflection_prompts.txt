What happens when you initialize a repository? Why do you need to do it?

A: git creates metadata used to keep track of changes to the directory

How is the staging area different from the working directory and the repository?
What value do you think it offers?

A: staging area is an intermediate workspace used to track which files will be
changed during the commit.

How can you use the staging area to make sure you have one commit per logical
change?

A: use git diff to check the changes made. Add one file to the staging area at at
time.  Develop a habit of commiting every logical change while coding.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

A: branches are helpful for adding new features to the program or experimenting while
keeping a working version of the program.  

How do the diagrams help you visualize the branch structure?

A: diagrams help visualize the reachability of the commits and which branches they
belong to. 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

A: metgint two branches creates a commo commit.  The parents of that commit are the
latest commits from both merged branches, which makes all previous commits in those
branches accessible.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

A: pros: saves time, draws programmer's attention to conflicts
   cons: does not differentiate between the same functions written differently
